package com.schappet.weight.controller;

import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.apache.commons.io.IOUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.NonUniqueObjectException;
import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.schappet.spring.DataTableHeader;
import com.schappet.spring.GenericDaoListOptions;
import com.schappet.spring.SortColumn;
import com.schappet.util.DataTable;
import com.schappet.web.C3;
import com.schappet.web.WeightView;
import com.schappet.weight.domain.Activity;
import com.schappet.weight.domain.Weight;

/**
 * Generated by Protogen 
 * @since 04/07/2015 09:42:54 CDT
 */
@Controller
@RequestMapping( "/record/data/*" )
public class RecordDataController extends AbstractWeightController {

    private static final Log log = LogFactory.getLog( RecordDataController.class );

    
    private static final int DEFAULT_PERSON = 1;
    
    @RequestMapping(value = {"list", "", "/"}, method = RequestMethod.GET)
    public String list() {
        return "index";
    }

    private final SimpleDateFormat sdf = new SimpleDateFormat("MMMM dd, yyyy 'at' KK:mma");
    private final SimpleDateFormat shortDate = new SimpleDateFormat("yyyy-MM-dd");
    
    
    
    @RequestMapping(value = {"/"}, method = RequestMethod.POST)
    @ResponseBody
    public String list(HttpServletRequest request,
    		@RequestParam(value="file", required=true) CommonsMultipartFile locationMapFileData,
    		@RequestParam(value="data") String data) {
    	//Map<String, String[]> names = request.getParameterMap();
    	InputStream in ;
    	String jsonStr;
		try {
			in = locationMapFileData.getInputStream();
			jsonStr = IOUtils.toString(in, "UTF-8");
			log.debug("contents: " + jsonStr);
    		
    		JSONObject json = new JSONObject(jsonStr);
		
			if (locationMapFileData.getOriginalFilename().startsWith("weight_")) {
	    		recordWeight(json);
			}
			if (locationMapFileData.getOriginalFilename().startsWith("activity_")) {
	    		recordActivity(json);
			}
			
 			 
		} catch (Exception e) {
			// TODO Auto-generated catch block
			log.error("error parsing json", e);
		} 
        return "done";
    }

    
    public void recordWeight(JSONObject json) {
		// { "MeasuredAt": April 01, 2015 at 05:22AM, "WeightLb": 191.28 }
		String dateStr = json.getString("MeasuredAt");
		Double value = json.getDouble("WeightLb");
		Date date = new Date();
		try {
			date = sdf.parse(dateStr);
			
		} catch (Exception pe) {
			log.debug("could not parse date", pe);
		}
		log.debug("Date : " + date + " : Value: " + value);
		Weight w = new Weight();
		w.setPersonId(DEFAULT_PERSON);
		w.setWeightInDate(date);
		w.setValue(""+value);
		weightDaoService.getWeightService().save(w);

    }
 
    public void recordActivity(JSONObject json) {
		// { "MeasuredAt": April 01, 2015 at 05:22AM, "WeightLb": 191.28 }
		String dateStr = json.getString("date");
		String points = json.getString("points");
		int personId = json.getInt("personId");
		log.debug("Date : " + dateStr + " : Value: " + points);
		Activity a = new Activity(dateStr+",11410,4.7,miles,"+points +",blah,", personId);
		
		weightDaoService.getActivityService().save(a);

    }
 
    
}