package com.schappet.defaultSchema.resource;



import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.NonUniqueObjectException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.*;

import com.schappet.defaultSchema.domain.*;
import edu.uiowa.icts.exception.EntityNotFoundException;
import edu.uiowa.icts.spring.GenericDaoListOptions;

/**
 * Generated by Protogen 
 * @see <a href="https://github.com/ui-icts/protogen">https://github.com/ui-icts/protogen</a>
 * @since 02/14/2016 12:30:14 CST
 */
@RestController( value = "com_schappet_defaultSchema_resource_weight_resource" )
@RequestMapping( "/rest/weight" )
public class WeightResource extends AbstractDefaultSchemaApiResource {

    private static final Log log = LogFactory.getLog( WeightResource.class );
    
    @RequestMapping( value = { "{weightId}" }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public Weight get( @PathVariable( "weightId" ) Integer weightId ) {
    	 Weight weight = defaultSchemaDaoService.getWeightService().findById( weightId );
		 if (weight == null){
			 throw new EntityNotFoundException();
		 } 
	     return weight;
    }
    
    @RequestMapping( method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public Weight create( @RequestBody @Valid Weight weight ) {
		 defaultSchemaDaoService.getWeightService().save( weight );
		 return weight;
    }
    
    @RequestMapping( value = { "{weightId}" }, method = { RequestMethod.POST, RequestMethod.PUT }, produces = MediaType.APPLICATION_JSON_VALUE  )
    public Weight update( @PathVariable( "weightId" ) Integer weightId, @RequestBody @Valid Weight weight ) {
    	Weight weightRecord = defaultSchemaDaoService.getWeightService().findById( weightId );
    	if ( weightRecord == null || !weightRecord.getWeightId().equals(weight.getWeightId())){
			 throw new EntityNotFoundException(); 
		 } 
    	 defaultSchemaDaoService.getWeightService().getSession().flush();
         defaultSchemaDaoService.getWeightService().getSession().clear();
		 defaultSchemaDaoService.getWeightService().update( weight );
		 return weight;
    }
    
    @RequestMapping( value = { "{weightId}" }, method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE )
    public String delete( @PathVariable( "weightId" ) Integer weightId ) {
    	Weight weight = defaultSchemaDaoService.getWeightService().findById( weightId );
		 if ( weight == null ){
			 throw new EntityNotFoundException();
		 } 
		 defaultSchemaDaoService.getWeightService().delete(weight);
	     return "";
    }
    
    @RequestMapping( value = {  "", "/"  }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public List<Weight> list() {
    	 return defaultSchemaDaoService.getWeightService().list();
    }

}